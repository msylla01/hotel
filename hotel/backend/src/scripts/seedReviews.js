const { User, Room, Review } = require('../models');

async function seedReviews() {
  try {
    console.log('üå± Ajout avis d\'exemple [msylla01] - 2025-10-03 11:12:32');

    // R√©cup√©rer des utilisateurs et chambres existants
    const users = await User.findAll({ limit: 5 });
    const rooms = await Room.findAll({ limit: 5 });

    if (users.length === 0) {
      console.log('‚ùå Aucun utilisateur trouv√©. Cr√©ez des utilisateurs d\'abord.');
      return;
    }

    if (rooms.length === 0) {
      console.log('‚ùå Aucune chambre trouv√©e. Cr√©ez des chambres d\'abord.');
      return;
    }

    console.log(`üìä Trouv√© ${users.length} utilisateurs et ${rooms.length} chambres [msylla01]`);

    const sampleReviews = [
      {
        userId: users[0].id,
        roomId: rooms[0].id,
        rating: 5,
        title: 'S√©jour exceptionnel !',
        comment: 'Chambre magnifique, service impeccable et personnel tr√®s accueillant. Vue splendide et propret√© irr√©prochable. Je recommande vivement cet √©tablissement pour un s√©jour de qualit√©.',
        pros: ['Propret√© excellente', 'Personnel accueillant', 'Belle vue', 'Confort optimal'],
        cons: [],
        isVerified: true,
        status: 'APPROVED'
      },
      {
        userId: users[Math.min(1, users.length - 1)].id,
        roomId: rooms[0].id,
        rating: 4,
        title: 'Tr√®s bon h√¥tel',
        comment: 'S√©jour tr√®s agr√©able dans l\'ensemble. Chambre confortable et bien √©quip√©e. Seul petit b√©mol, le WiFi pourrait √™tre plus rapide. Sinon parfait pour un s√©jour d\'affaires.',
        pros: ['Chambre confortable', 'Bien situ√©', 'Petit-d√©jeuner correct'],
        cons: ['WiFi un peu lent'],
        isVerified: true,
        status: 'APPROVED'
      },
      {
        userId: users[Math.min(2, users.length - 1)].id,
        roomId: rooms[Math.min(1, rooms.length - 1)].id,
        rating: 5,
        title: 'Parfait pour une escapade romantique',
        comment: 'Nous avons pass√© un weekend merveilleux. La chambre double avec balcon √©tait parfaite, tr√®s romantique avec une vue imprenable. Service aux petits soins.',
        pros: ['Vue magnifique', 'Ambiance romantique', 'Service excellent', 'Balcon priv√©'],
        cons: [],
        isVerified: true,
        status: 'APPROVED'
      }
    ];

    let createdCount = 0;
    
    for (const reviewData of sampleReviews) {
      try {
        // V√©rifier qu'un avis n'existe pas d√©j√†
        const existing = await Review.findOne({
          where: { 
            userId: reviewData.userId,
            roomId: reviewData.roomId
          }
        });

        if (!existing) {
          await Review.create(reviewData);
          createdCount++;
          console.log(`‚úÖ Avis cr√©√© pour chambre ${reviewData.roomId} par utilisateur ${reviewData.userId} [msylla01]`);
        } else {
          console.log(`‚ö†Ô∏è Avis existe d√©j√† pour chambre ${reviewData.roomId} par utilisateur ${reviewData.userId} [msylla01]`);
        }
      } catch (error) {
        console.error(`‚ùå Erreur cr√©ation avis ${reviewData.title} [msylla01]:`, error.message);
      }
    }

    console.log(`‚úÖ ${createdCount} nouveaux avis cr√©√©s sur ${sampleReviews.length} tentatives [msylla01]`);

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale creation avis d\'exemple [msylla01]:', error);
  }
}

module.exports = seedReviews;

// Ex√©cuter si appel√© directement
if (require.main === module) {
  seedReviews()
    .then(() => {
      console.log('‚úÖ Script seedReviews termin√© [msylla01]');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Script seedReviews √©chou√© [msylla01]:', error);
      process.exit(1);
    });
}
