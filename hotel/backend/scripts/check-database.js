const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkDatabase() {
  console.log('üîç V√©rification base de donn√©es [msylla01] - 2025-10-02 00:43:12...');

  try {
    // V√©rifier les utilisateurs
    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        isActive: true,
        createdAt: true
      }
    });

    console.log(`üë• ${users.length} utilisateurs trouv√©s:`);
    users.forEach(user => {
      console.log(`  - ${user.firstName} ${user.lastName} (${user.email}) - Active: ${user.isActive}`);
    });

    // V√©rifier les chambres
    const rooms = await prisma.room.findMany({
      select: {
        id: true,
        name: true,
        type: true,
        price: true,
        isActive: true
      }
    });

    console.log(`\nüè® ${rooms.length} chambres trouv√©es:`);
    rooms.forEach(room => {
      console.log(`  - ${room.name} (${room.type}) - ${room.price}‚Ç¨ - Active: ${room.isActive}`);
    });

    // V√©rifier les r√©servations
    const bookings = await prisma.booking.findMany({
      include: {
        user: {
          select: {
            firstName: true,
            lastName: true,
            email: true
          }
        },
        room: {
          select: {
            name: true,
            type: true,
            price: true
          }
        }
      }
    });

    console.log(`\nüìã ${bookings.length} r√©servations trouv√©es:`);
    bookings.forEach(booking => {
      console.log(`  - ${booking.id} - ${booking.user.firstName} ${booking.user.lastName} - ${booking.room.name} - ${booking.status} - ${booking.totalAmount}‚Ç¨`);
      console.log(`    Du ${booking.checkIn.toLocaleDateString()} au ${booking.checkOut.toLocaleDateString()}`);
    });

    // V√©rifier les paiements
    const payments = await prisma.payment.findMany({
      include: {
        booking: {
          include: {
            user: {
              select: {
                firstName: true,
                lastName: true
              }
            },
            room: {
              select: {
                name: true
              }
            }
          }
        }
      }
    });

    console.log(`\nüí≥ ${payments.length} paiements trouv√©s:`);
    payments.forEach(payment => {
      console.log(`  - ${payment.id} - ${payment.amount}‚Ç¨ - ${payment.status} - ${payment.method}`);
    });

  } catch (error) {
    console.error('‚ùå Erreur v√©rification base [msylla01]:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();
