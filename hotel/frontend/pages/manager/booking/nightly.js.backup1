import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'
import Head from 'next/head'
import Link from 'next/link'
import { motion } from 'framer-motion'
import { 
  ArrowLeftIcon,
  CalendarDaysIcon,
  HomeIcon,
  BanknotesIcon,
  PrinterIcon,
  CheckCircleIcon
} from '@heroicons/react/24/outline'

export default function NightlyBooking() {
  const router = useRouter()
  const { roomId } = router.query
  const [user, setUser] = useState(null)
  const [rooms, setRooms] = useState([])
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [success, setSuccess] = useState(null)
  const [formData, setFormData] = useState({
    roomId: roomId || '',
    checkIn: '',
    notes: ''
  })

  useEffect(() => {
    // V√©rifier authentification g√©rant
    const token = localStorage.getItem('hotel_token')
    const userData = localStorage.getItem('hotel_user')
    
    if (!token || !userData) {
      router.push('/auth/login')
      return
    }

    try {
      console.log("üîê V√©rification auth g√©rant:", user.email, user.role);
      const user = JSON.parse(userData)
      if (user.role !== "MANAGER" && user.role !== "ADMIN") {
        router.push('/dashboard')
        return
      }

      setUser(user)
      fetchAvailableRooms()

      // D√©finir 22h aujourd'hui par d√©faut
      const tonight = new Date()
      tonight.setHours(22, 0, 0, 0)
      setFormData(prev => ({
        ...prev,
        checkIn: tonight.toISOString().slice(0, 16),
        roomId: roomId || prev.roomId
      }))
    } catch (err) {
      console.error('‚ùå Erreur auth g√©rant [msylla01]:', err)
      router.push('/auth/login')
    }
  }, [router, roomId])

  const fetchAvailableRooms = async () => {
    try {
      console.log("üîê V√©rification auth g√©rant:", user.email, user.role);
      const token = localStorage.getItem('hotel_token')
      const response = await fetch('http://localhost:5000/api/manager/dashboard', {
        headers: { 'Authorization': `Bearer ${token}` }
      })

      const data = await response.json()
      if (data.success) {
        const availableRooms = data.data.rooms.filter(room => !room.isOccupied)
        setRooms(availableRooms)
      }
    } catch (error) {
      console.error('‚ùå Erreur r√©cup√©ration chambres [msylla01]:', error)
      // Fallback
      setRooms([
        { id: '1', name: 'Chambre 101', type: 'DOUBLE', price: 120, isOccupied: false },
        { id: '2', name: 'Suite 201', type: 'SUITE', price: 250, isOccupied: false }
      ])
    }
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    if (!formData.roomId || !formData.checkIn) {
      setError('Veuillez remplir tous les champs obligatoires')
      return
    }

    // V√©rifier que l'heure est >= 22h
    const checkInTime = new Date(formData.checkIn)
    if (checkInTime.getHours() < 22) {
      setError('Les nuit√©es commencent √† partir de 22h00')
      return
    }

    try {
      console.log("üîê V√©rification auth g√©rant:", user.email, user.role);
      setLoading(true)
      setError('')

      const token = localStorage.getItem('hotel_token')
      const response = await fetch('http://localhost:5000/api/manager/booking/nightly', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      })

      const data = await response.json()

      if (response.ok && data.success) {
        setSuccess(data)
        console.log('‚úÖ R√©servation nuit√©e cr√©√©e [msylla01]:', data.booking.id)
      } else {
        throw new Error(data.message || 'Erreur cr√©ation r√©servation')
      }
    } catch (error) {
      console.error('‚ùå Erreur cr√©ation r√©servation nuit√©e [msylla01]:', error)
      setError(error.message)
    } finally {
      setLoading(false)
    }
  }

  const getSelectedRoom = () => {
    return rooms.find(r => r.id === formData.roomId)
  }

  const getCheckOutTime = () => {
    if (!formData.checkIn) return ''
    
    const checkIn = new Date(formData.checkIn)
    const checkOut = new Date(checkIn)
    checkOut.setDate(checkOut.getDate() + 1)
    checkOut.setHours(12, 0, 0, 0)
    return checkOut.toLocaleString('fr-FR')
  }

  if (success) {
    return (
      <>
        <Head>
          <title>Nuit√©e Cr√©√©e - Espace G√©rant</title>
        </Head>

        <div className="min-h-screen bg-gray-50 flex items-center justify-center">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            className="bg-white rounded-2xl shadow-lg p-8 max-w-md w-full mx-4"
          >
            <div className="text-center mb-6">
              <CheckCircleIcon className="w-16 h-16 text-blue-500 mx-auto mb-4" />
              <h2 className="text-2xl font-bold text-gray-900 mb-2">
                Nuit√©e Enregistr√©e !
              </h2>
              <p className="text-gray-600">
                S√©jour nuit√©e cr√©√© avec succ√®s
              </p>
            </div>

            <div className="space-y-3 mb-6 bg-gray-50 p-4 rounded-lg">
              <div className="flex justify-between">
                <span className="text-gray-600">Re√ßu N¬∞:</span>
                <span className="font-mono text-sm">{success.receipt.number}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Chambre:</span>
                <span className="font-medium">{success.receipt.room}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">P√©riode:</span>
                <span>{success.receipt.duration}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Entr√©e:</span>
                <span>{success.receipt.checkIn}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Sortie:</span>
                <span className="font-medium text-orange-600">{success.receipt.checkOut}</span>
              </div>
              <div className="flex justify-between border-t pt-3">
                <span className="font-bold">TOTAL:</span>
                <span className="font-bold text-blue-600">{success.receipt.total}</span>
              </div>
            </div>

            <div className="space-y-3">
              <button
                onClick={() => {
                  const receiptWindow = window.open('', '_blank')
                  receiptWindow.document.write(`
                    <!DOCTYPE html>
                    <html>
                    <head>
                      <title>Re√ßu Nuit√©e - Hotel Luxe</title>
                      <style>
                        body { font-family: Arial, sans-serif; max-width: 300px; margin: 20px auto; }
                        .header { text-align: center; border-bottom: 2px solid #000; padding-bottom: 10px; margin-bottom: 15px; }
                        .row { display: flex; justify-content: space-between; margin: 5px 0; }
                        .total { border-top: 2px solid #000; padding-top: 10px; font-weight: bold; }
                        .footer { text-align: center; margin-top: 15px; font-size: 12px; }
                      </style>
                    </head>
                    <body>
                      <div class="header">
                        <h2>HOTEL LUXE</h2>
                        <p>NUIT√âE</p>
                        <p>Re√ßu N¬∞ ${success.receipt.number}</p>
                      </div>
                      
                      <div class="row"><span>Chambre:</span><span>${success.receipt.room}</span></div>
                      <div class="row"><span>Type:</span><span>${success.receipt.type}</span></div>
                      <div class="row"><span>P√©riode:</span><span>${success.receipt.duration}</span></div>
                      <div class="row"><span>Entr√©e:</span><span>${success.receipt.checkIn}</span></div>
                      <div class="row"><span>Sortie:</span><span>${success.receipt.checkOut}</span></div>
                      
                      <div class="total">
                        <div class="row"><span>TOTAL:</span><span>${success.receipt.total}</span></div>
                      </div>
                      
                      <div class="footer">
                        <p>G√©rant: ${user?.firstName} ${user?.lastName}</p>
                        <p>Merci de votre visite !</p>
                        <p>Hotel Luxe - 2025-10-03 23:16:23</p>
                      </div>
                    </body>
                    </html>
                  `)
                  receiptWindow.document.close()
                  receiptWindow.print()
                }}
                className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-2"
              >
                <PrinterIcon className="w-5 h-5" />
                <span>Imprimer Re√ßu</span>
              </button>
              
              <Link
                href="/manager"
                className="block w-full bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors text-center"
              >
                Retour Dashboard
              </Link>
            </div>
          </motion.div>
        </div>
      </>
    )
  }

  return (
    <>
      <Head>
        <title>R√©servation Nuit√©e - Espace G√©rant</title>
        <meta name="description" content="Cr√©er une r√©servation nuit√©e 22h-12h" />
      </Head>

      <div className="min-h-screen bg-gray-50">
        {/* Header */}
        <header className="bg-white shadow-sm border-b">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-4">
              <div className="flex items-center space-x-4">
                <Link href="/manager" className="flex items-center text-gray-600 hover:text-blue-600 transition-colors">
                  <ArrowLeftIcon className="w-5 h-5 mr-2" />
                  Espace G√©rant
                </Link>
                <div className="text-gray-300">‚Ä¢</div>
                <h1 className="text-xl font-bold text-gray-900">R√©servation Nuit√©e</h1>
              </div>

              <div className="flex items-center space-x-4">
                <span className="text-sm text-gray-600">
                  üè® {user?.firstName} {user?.lastName}
                </span>
                <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs">G√©rant</span>
              </div>
            </div>
          </div>
        </header>

        <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white rounded-2xl shadow-sm p-8"
          >
            {/* En-t√™te */}
            <div className="flex items-center space-x-3 mb-8">
              <div className="w-12 h-12 bg-blue-600 rounded-xl flex items-center justify-center">
                <CalendarDaysIcon className="w-6 h-6 text-white" />
              </div>
              <div>
                <h2 className="text-2xl font-bold text-gray-900">Nuit√©e Standardis√©e</h2>
                <p className="text-gray-600">Entr√©e √† partir de 22h00 ‚Ä¢ Sortie √† 12h00 (+1 jour)</p>
              </div>
            </div>

            {error && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
                <p className="text-red-800">‚ùå {error}</p>
              </div>
            )}

            <form onSubmit={handleSubmit} className="space-y-6">
              {/* S√©lection chambre */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Chambre disponible *
                </label>
                <select
                  value={formData.roomId}
                  onChange={(e) => setFormData({ ...formData, roomId: e.target.value })}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  required
                >
                  <option value="">S√©lectionner une chambre</option>
                  {rooms.map(room => (
                    <option key={room.id} value={room.id}>
                      {room.name} - {room.type} ({room.price || 120}‚Ç¨/nuit)
                    </option>
                  ))}
                </select>
              </div>

              {/* Heure d'entr√©e */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Heure d'entr√©e * (22h00 minimum)
                </label>
                <input
                  type="datetime-local"
                  value={formData.checkIn}
                  onChange={(e) => setFormData({ ...formData, checkIn: e.target.value })}
                  min={new Date().toISOString().slice(0, 16)}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  required
                />
                <p className="text-xs text-gray-500 mt-1">
                  ‚è∞ Les nuit√©es commencent obligatoirement √† partir de 22h00
                </p>
              </div>

              {/* R√©sum√© */}
              {formData.roomId && formData.checkIn && (
                <div className="bg-blue-50 p-4 rounded-lg">
                  <h3 className="font-semibold text-blue-900 mb-3">üåô R√©sum√© de la nuit√©e</h3>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Chambre:</span>
                      <span className="font-medium">
                        {getSelectedRoom()?.name} ({getSelectedRoom()?.type})
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>Entr√©e:</span>
                      <span>{new Date(formData.checkIn).toLocaleString('fr-FR')}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Sortie pr√©vue:</span>
                      <span className="font-medium text-orange-600">{getCheckOutTime()}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Dur√©e:</span>
                      <span>22h00 ‚Üí 12h00 (+1 jour)</span>
                    </div>
                    <div className="flex justify-between border-t pt-2">
                      <span className="font-bold">TOTAL:</span>
                      <span className="font-bold text-blue-600 text-lg">
                        {getSelectedRoom()?.price || 120}‚Ç¨
                      </span>
                    </div>
                  </div>
                </div>
              )}

              {/* Notes */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Notes (optionnel)
                </label>
                <textarea
                  value={formData.notes}
                  onChange={(e) => setFormData({ ...formData, notes: e.target.value })}
                  placeholder="Notes particuli√®res pour cette nuit√©e..."
                  rows={3}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 resize-none"
                />
              </div>

              {/* Boutons */}
              <div className="flex space-x-4 pt-6 border-t">
                <Link
                  href="/manager"
                  className="flex-1 border border-gray-300 text-gray-700 py-3 px-6 rounded-lg hover:bg-gray-50 transition-colors text-center"
                >
                  Annuler
                </Link>
                <button
                  type="submit"
                  disabled={loading || !formData.roomId || !formData.checkIn}
                  className="flex-1 bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                      <span>Cr√©ation...</span>
                    </>
                  ) : (
                    <>
                      <BanknotesIcon className="w-5 h-5" />
                      <span>Enregistrer Nuit√©e</span>
                    </>
                  )}
                </button>
              </div>
            </form>
          </motion.div>

          {/* Info nuit√©e */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 }}
            className="mt-6 bg-white rounded-lg shadow-sm p-6"
          >
            <h3 className="text-lg font-semibold text-gray-900 mb-4">üåô Informations Nuit√©e</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <div className="font-semibold text-blue-900">Horaire d'entr√©e</div>
                <div className="text-lg font-bold text-blue-600">√Ä partir de 22h00</div>
              </div>
              <div className="text-center p-4 bg-orange-50 rounded-lg">
                <div className="font-semibold text-orange-900">Horaire de sortie</div>
                <div className="text-lg font-bold text-orange-600">12h00 lendemain</div>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <div className="font-semibold text-green-900">Tarification</div>
                <div className="text-lg font-bold text-green-600">Prix standard chambre</div>
              </div>
            </div>
          </motion.div>

          {/* Footer info */}
          <div className="mt-6 text-center text-gray-500 text-sm">
            R√©servation Nuit√©e ‚Ä¢ Espace G√©rant ‚Ä¢ msylla01 ‚Ä¢ 2025-10-03 23:16:23
          </div>
        </main>
      </div>
    </>
  )
}
